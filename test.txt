public FisUserCreationAugmentedResult DeleteUserFromExternalProvider(int userId, string firmName)
        {
            _logger.LogInformation($"deleting user in external provider with user id {userId}");

            var fisUserCreationAugmentedResult = new FisUserCreationAugmentedResult();

            if (userId != 0)
            {
                var httpWebRequest = (HttpWebRequest)WebRequest.Create(_userBusinessSettings.FisIdpUrlForUser + "/batch/permanent/?id=" + userId);
                httpWebRequest.ContentType = "application/json";
                httpWebRequest.Method = "DELETE";
                httpWebRequest.Headers.Add("X-SunGard-IdP-API-Key", _userBusinessSettings.PanoramaRewriteApiKey);
                httpWebRequest.Headers.Add("Authorization", "Bearer " + _userBusinessSettings.AccessToken);
                httpWebRequest.Headers.Add("Accept", "application/json");
                httpWebRequest.Headers.Add("selected-firm-name", firmName);

                try
                {
                    var httpResponse = (HttpWebResponse)httpWebRequest.GetResponse();

                    if (httpResponse.StatusCode == HttpStatusCode.OK)
                    {
                        fisUserCreationAugmentedResult.ResponseType = ResponseType.Success;

                        _logger.LogInformation($"User deleted in FIS IDP for external user id: {userId}");
                    }
                }
                catch (WebException ex)
                {
                    var response = (HttpWebResponse)ex.Response;

                    _logger.LogInformation("Error occurred while deleting a user in external provider." + ex.Message);

                    try
                    {
                        var webResponse = ((HttpWebResponse)ex.Response);
                        var content = webResponse.GetResponseStream();
                        var encode = System.Text.Encoding.GetEncoding("utf-8");
                        StreamReader readStream = new StreamReader(content, encode);
                        String str = readStream.ReadToEnd();
                        var errLogs = JsonConvert.DeserializeObject<FisIdpValidationModel>(str);

                        _logger.LogInformation("Logging error string received external provider" + str);

                        fisUserCreationAugmentedResult.ResponseType = ResponseType.ValidationError;
                        fisUserCreationAugmentedResult.ExternalProvidersErrors = errLogs;
                    }
                    catch (Exception exception)
                    {
                        fisUserCreationAugmentedResult.ResponseType = ResponseType.ExceptionError;
                        fisUserCreationAugmentedResult.ErrorMessage = "Error occurred while deleting a user in external provider.";
                        _logger.LogError("Error occurred while deleting a user in external provider." + exception.Message);
                    }
                }
                catch (Exception ex)
                {
                    _logger.LogError("Error occurred while deleting a user in external provider " + ex.Message);
                    fisUserCreationAugmentedResult.ResponseType = ResponseType.ExceptionError;
                    fisUserCreationAugmentedResult.ErrorMessage = "Error occurred while deleting a user in external provider.";
                }
            }
            else
            {
                fisUserCreationAugmentedResult.ResponseType = ResponseType.ValidationError;
                fisUserCreationAugmentedResult.ErrorMessage = "Invalid User Id";
            }
            return fisUserCreationAugmentedResult;
        }
