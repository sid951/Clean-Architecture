 public FisUserCreationAugmentedResult ChangeUserPasswordExternalProvider(ChangeUserPassword changeUserPassword, string firmName, long userId)
        {
            var fisUserCreationAugmentedResult = new FisUserCreationAugmentedResult();

            var httpWebRequest = (HttpWebRequest)WebRequest.Create($"{_userBusinessSettings.FisIdpUrlForUser}reset-pwd/{userId}");
            httpWebRequest.ContentType = "application/json";
            httpWebRequest.Method = "PUT";
            httpWebRequest.Headers.Add("X-SunGard-IdP-API-Key", _userBusinessSettings.PanoramaRewriteApiKey);
            httpWebRequest.Headers.Add("Authorization", "Bearer " + _userBusinessSettings.AccessToken);
            httpWebRequest.Headers.Add("Accept", "application/json");
            httpWebRequest.Headers.Add("selected-firm-name", firmName);
            try
            {
                using (var streamWriter = new StreamWriter(httpWebRequest.GetRequestStream()))
                {
                    string json = JsonConvert.SerializeObject(changeUserPassword, new JsonSerializerSettings { ContractResolver = new CamelCasePropertyNamesContractResolver() });
                    streamWriter.Write(json);
                }

                var httpResponse = (HttpWebResponse)httpWebRequest.GetResponse();

                if (httpResponse.StatusCode == HttpStatusCode.OK)
                {
                    fisUserCreationAugmentedResult.ResponseType = ResponseType.Success;

                    _logger.LogInformation($"User password changed in FIS IDP for user id: {userId}");
                }
            }
            catch (WebException ex)
            {
                var response = (HttpWebResponse)ex.Response;

                _logger.LogError("Error occurred while changing a user password in external provider." + ex.Message);

                try
                {
                    var webResponse = ((HttpWebResponse)ex.Response);
                    var content = webResponse.GetResponseStream();
                    var encode = System.Text.Encoding.GetEncoding("utf-8");
                    StreamReader readStream = new StreamReader(content, encode);
                    String str = readStream.ReadToEnd();
                    var errLogs = JsonConvert.DeserializeObject<FisIdpValidationModel>(str);

                    _logger.LogError("Logging error string received external provider" + str);

                    fisUserCreationAugmentedResult.ResponseType = ResponseType.ValidationError;
                    fisUserCreationAugmentedResult.ExternalProvidersErrors = errLogs;
                }
                catch (Exception exception)
                {
                    fisUserCreationAugmentedResult.ResponseType = ResponseType.ExceptionError;
                    fisUserCreationAugmentedResult.ErrorMessage = "Error occurred while changing user password in external provider.";
                    _logger.LogError("Error occurred while changing user password in external provider." + exception.Message);
                }
            }
            catch (Exception ex)
            {
                _logger.LogError("Error occurred while changing user password in external provider " + ex.Message);
                fisUserCreationAugmentedResult.ResponseType = ResponseType.ExceptionError;
                fisUserCreationAugmentedResult.ErrorMessage = "Error occurred while changing user password in external provider.";
            }


            return fisUserCreationAugmentedResult;
        }
