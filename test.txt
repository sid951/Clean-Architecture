private async Task<FisIdpUserModel> GetFisIdpUserByExternalId(int externalUserId, ref FisUserCreationAugmentedResult fisUserCreationAugmentedResult, string FirmName)
{
    _logger.LogInformation($"Getting user from external provider with user id {externalUserId}");
    FisIdpUserModel fisIdpUserModel = null;

    if (externalUserId != 0)
    {
        try
        {
            string url = $"{_userBusinessSettings.FisIdpUrlForUser}/{externalUserId}";
            _httpClient.DefaultRequestHeaders.Add("X-SunGard-IdP-API-Key", _userBusinessSettings.PanoramaRewriteApiKey);
            _httpClient.DefaultRequestHeaders.Add("Authorization", "Bearer " + _userBusinessSettings.AccessToken);
            _httpClient.DefaultRequestHeaders.Add("Accept", "application/json");
            _httpClient.DefaultRequestHeaders.Add("selected-firm-name", FirmName);

            var httpResponse = await _httpClient.GetAsync(url);
            if (httpResponse.IsSuccessStatusCode)
            {
                var result = await httpResponse.Content.ReadAsStringAsync();
                fisIdpUserModel = JsonConvert.DeserializeObject<FisIdpUserModel>(result);
            }
            else if (httpResponse.StatusCode == HttpStatusCode.NotFound)
            {
                fisUserCreationAugmentedResult.ErrorMessage = "User not found in external authentication system";
                fisUserCreationAugmentedResult.ResponseType = ResponseType.NotFound;
            }
            else
            {
                // Handle other non-successful status codes here if needed.
                fisUserCreationAugmentedResult.ErrorMessage = "Error occurred while fetching user from external provider.";
                fisUserCreationAugmentedResult.ResponseType = ResponseType.ExceptionError;
                _logger.LogError($"Error occurred while fetching user from external provider. Status Code: {httpResponse.StatusCode}");
            }
        }
        catch (HttpRequestException ex)
        {
            // The HttpClient request failed (e.g., network error, DNS resolution issue).
            _logger.LogError("Error occurred while fetching user from external provider: " + ex.Message);
            fisUserCreationAugmentedResult.ResponseType = ResponseType.ExceptionError;
            fisUserCreationAugmentedResult.ErrorMessage = "Error occurred while fetching user from external provider.";
        }
        catch (Exception ex)
        {
            // Other exceptions (e.g., JSON deserialization, reading response content, etc.).
            _logger.LogError("Error occurred while fetching user from external provider: " + ex.Message);
            fisUserCreationAugmentedResult.ResponseType = ResponseType.ExceptionError;
            fisUserCreationAugmentedResult.ErrorMessage = "Error occurred while fetching user from external provider.";
        }
    }

    return fisIdpUserModel;
}
